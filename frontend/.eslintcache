[{"/home/anguilar/cloudsound/frontend/src/index.js":"1","/home/anguilar/cloudsound/frontend/src/App.js":"2","/home/anguilar/cloudsound/frontend/src/store/csrf.js":"3","/home/anguilar/cloudsound/frontend/src/store/session.js":"4","/home/anguilar/cloudsound/frontend/src/store/index.js":"5","/home/anguilar/cloudsound/frontend/src/components/LoginFormPage/index.js":"6","/home/anguilar/cloudsound/frontend/src/components/SignupFormPage/index.js":"7","/home/anguilar/cloudsound/frontend/src/components/Navigation/index.js":"8","/home/anguilar/cloudsound/frontend/src/components/Navigation/ProfileButton.js":"9","/home/anguilar/cloudsound/frontend/src/components/ProfilePage/index.js":"10","/home/anguilar/cloudsound/frontend/src/components/HomePage/index.js":"11","/home/anguilar/cloudsound/frontend/src/components/MusicCarousel/index.js":"12","/home/anguilar/cloudsound/frontend/src/components/SongCard/index.js":"13","/home/anguilar/cloudsound/frontend/src/components/UploadPage/index.js":"14","/home/anguilar/cloudsound/frontend/src/components/WaveForm/index.js":"15","/home/anguilar/cloudsound/frontend/src/components/UploadPhoto/index.js":"16","/home/anguilar/cloudsound/frontend/src/components/VideoHeader/index.js":"17"},{"size":952,"mtime":1611810272046,"results":"18","hashOfConfig":"19"},{"size":1299,"mtime":1611811876466,"results":"20","hashOfConfig":"19"},{"size":1612,"mtime":1611788701570,"results":"21","hashOfConfig":"19"},{"size":1586,"mtime":1611532049010,"results":"22","hashOfConfig":"19"},{"size":674,"mtime":1611354658670,"results":"23","hashOfConfig":"19"},{"size":1619,"mtime":1611718799280,"results":"24","hashOfConfig":"19"},{"size":2210,"mtime":1611719546830,"results":"25","hashOfConfig":"19"},{"size":2237,"mtime":1611812055216,"results":"26","hashOfConfig":"19"},{"size":1728,"mtime":1611812039046,"results":"27","hashOfConfig":"19"},{"size":5453,"mtime":1611820526693,"results":"28","hashOfConfig":"19"},{"size":824,"mtime":1611820269433,"results":"29","hashOfConfig":"19"},{"size":1434,"mtime":1611698038300,"results":"30","hashOfConfig":"19"},{"size":863,"mtime":1611820233493,"results":"31","hashOfConfig":"19"},{"size":4950,"mtime":1611801847786,"results":"32","hashOfConfig":"19"},{"size":2689,"mtime":1611800197536,"results":"33","hashOfConfig":"19"},{"size":3752,"mtime":1611793151300,"results":"34","hashOfConfig":"19"},{"size":1115,"mtime":1611819170043,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"dq5x7l",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/anguilar/cloudsound/frontend/src/index.js",["76"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./store\";\nimport { restoreCSRF, fetch } from \"./store/csrf\";\nimport * as sessionActions from \"./store/session\";\nimport { PageTransition } from \"@steveeeie/react-page-transition\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = fetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  window.store = store;\n}\n\nfunction Root() {\n  return (\n    <ReduxProvider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ReduxProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["77","78"],"/home/anguilar/cloudsound/frontend/src/App.js",[],"/home/anguilar/cloudsound/frontend/src/store/csrf.js",[],"/home/anguilar/cloudsound/frontend/src/store/session.js",["79","80","81"],"import { fetch } from \"./csrf\";\nimport { dispatch, getState } from \"react-redux\";\n\nexport function login({ credential, password }) {\n  return async function (dispatch, getState) {\n    const session = await fetch(\"/api/session\", {\n      method: \"POST\",\n      body: JSON.stringify({ credential, password }),\n    });\n    dispatch(setSessionUser(session.data.user));\n    return session;\n  };\n}\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await fetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  dispatch(setSessionUser(response.data.user));\n  return response;\n};\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeSessionUser());\n  return response;\n};\n\nexport const restoreUser = () => async (dispatch) => {\n  const res = await fetch(\"/api/session\");\n  dispatch(setSessionUser(res.data.user));\n  return res;\n};\n\nexport function setSessionUser(session) {\n  return { type: \"SET_SESSION_USER\", session };\n}\n\nexport function removeSessionUser(session) {\n  return { type: \"REMOVE_SESSION_USER\", session };\n}\n\nconst defaultState = { user: null };\n\nexport default function sessionReducer(state = defaultState, action) {\n  let newState;\n  switch (action.type) {\n    case \"SET_SESSION_USER\":\n      return { ...state, user: action.session };\n    case \"REMOVE_SESSION_USER\":\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n}\n","/home/anguilar/cloudsound/frontend/src/store/index.js",[],"/home/anguilar/cloudsound/frontend/src/components/LoginFormPage/index.js",[],"/home/anguilar/cloudsound/frontend/src/components/SignupFormPage/index.js",[],"/home/anguilar/cloudsound/frontend/src/components/Navigation/index.js",[],"/home/anguilar/cloudsound/frontend/src/components/Navigation/ProfileButton.js",[],"/home/anguilar/cloudsound/frontend/src/components/ProfilePage/index.js",["82"],"/home/anguilar/cloudsound/frontend/src/components/HomePage/index.js",["83"],"/home/anguilar/cloudsound/frontend/src/components/MusicCarousel/index.js",[],"/home/anguilar/cloudsound/frontend/src/components/SongCard/index.js",[],"/home/anguilar/cloudsound/frontend/src/components/UploadPage/index.js",["84","85"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetch } from \"../../store/csrf\";\nimport { Layout, Row, Col, Upload, message, Input } from \"antd\";\nimport {\n  PlusOutlined,\n  LoadingOutlined,\n  InboxOutlined,\n} from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nconst { Dragger } = Upload;\nconst { Content, Footer } = Layout;\n\nfunction UploadPage() {\n  const [imageLoading, setImageLoading] = useState(false);\n  const sessionUser = useSelector((state) => state.session.user);\n  const userId = sessionUser.id;\n  console.log(userId);\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  function beforeUpload(file) {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  }\n\n  function handleChange(info) {\n    if (info.file.status === \"uploading\") {\n      setImageLoading({ loading: true });\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) =>\n        setImageLoading({\n          imageUrl,\n          loading: false,\n        })\n      );\n    }\n  }\n\n  const { loading, imageUrl } = imageLoading;\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  const props = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n  };\n\n  function onChange(info) {\n    const { status } = info.file;\n    if (status !== \"uploading\") {\n      console.log(info.file, info.fileList);\n    }\n    if (status === \"done\") {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === \"error\") {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  }\n\n  useEffect(() => {\n    // profileFetch();\n  }, []);\n\n  return (\n    <Layout className=\"layout\" style={{ background: \"none\" }}>\n      <Content style={{ backgroundColor: \"#edeeef\", marginTop: \"0px\" }}>\n        {/* <div className=\"site-layout-content\">Content</div> */}\n        <div\n          className=\"header\"\n          style={{\n            backgroundImage: `url(\"https://cloudsoundappbucket.s3-us-west-1.amazonaws.com/Default-Banner.png\")`,\n            backgroundSize: \"cover\",\n            zIndex: \"1\",\n            width: \"100%\",\n          }}\n        >\n          <h2 style={{ color: \"white\" }}>Upload a Song 🎵</h2>\n        </div>\n        <div className=\"centered\">\n          <div className=\"uploadBox\">\n            <Row>\n              <Col span={14}>\n                <h4>Song Title</h4>\n                <Input size=\"large\" />\n              </Col>\n              <Col span={3}></Col>\n              <Col\n                span={6}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Upload\n                  name=\"avatar\"\n                  listType=\"picture-card\"\n                  className=\"avatar-uploader\"\n                  showUploadList={false}\n                  action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                  beforeUpload={beforeUpload}\n                  onChange={handleChange}\n                >\n                  {imageUrl ? (\n                    <img src={imageUrl} alt=\"avatar\" style={{ width: \"50%\" }} />\n                  ) : (\n                    uploadButton\n                  )}\n                </Upload>\n              </Col>\n            </Row>\n            <Row style={{ height: \"50px\" }}>\n              <Col span={12}></Col>\n              <Col span={12}></Col>\n            </Row>\n            <Row>\n              <Col span={3}></Col>\n              <Col\n                span={16}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <h3>Audio</h3>\n              </Col>\n              <Col span={3}></Col>\n            </Row>\n            <Row>\n              <Col span={3}></Col>\n              <Col span={16}>\n                <Dragger {...props} onChange={onChange}>\n                  <p className=\"ant-upload-drag-icon\">\n                    <InboxOutlined />\n                  </p>\n                  <p className=\"ant-upload-text\">Drag audio here</p>\n                  <p className=\"ant-upload-hint\">\n                    Supported types are .mp3 and .ogg.\n                  </p>\n                </Dragger>\n              </Col>\n              <Col span={3}></Col>\n            </Row>\n          </div>\n        </div>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default UploadPage;\n","/home/anguilar/cloudsound/frontend/src/components/WaveForm/index.js",["86","87"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Slider } from \"antd\";\nimport \"./index.css\";\n\nimport \"antd/dist/antd.css\";\n\nimport WaveSurfer from \"wavesurfer.js\";\n\nconst formWaveSurferOptions = (ref) => ({\n  container: ref,\n  waveColor: \"rgba(255, 255, 255, 0.65)\",\n  progressColor: \"#E3E4DB\",\n  cursorColor: \"rgb(22, 22, 23)\",\n  barWidth: 3,\n  barRadius: 2,\n  responsive: true,\n  height: 150,\n  normalize: true,\n  partialRender: true,\n});\n\nexport function Waveform({ url }) {\n  if (!url) {\n    url =\n      \"https://www.mfiles.co.uk/mp3-downloads/brahms-st-anthony-chorale-theme-two-pianos.mp3\";\n  }\n\n  const waveformRef = useRef(null);\n  const wavesurfer = useRef(null);\n  const [playing, setPlay] = useState(false);\n  const [volume, setVolume] = useState(0.5);\n\n  // create new WaveSurfer instance\n  // On component mount and when url changes\n  useEffect(() => {\n    setPlay(false);\n\n    const options = formWaveSurferOptions(waveformRef.current);\n    wavesurfer.current = WaveSurfer.create(options);\n\n    wavesurfer.current.load(url);\n\n    wavesurfer.current.on(\"ready\", function () {\n      // https://wavesurfer-js.org/docs/methods.html\n      // wavesurfer.current.play();\n      // setPlay(true);\n\n      // make sure object stillavailable when file loaded\n      if (wavesurfer.current) {\n        wavesurfer.current.setVolume(volume);\n        setVolume(volume);\n      }\n    });\n\n    // Removes events, elements and disconnects Web Audio nodes.\n    // when component unmount\n    return () => wavesurfer.current.destroy();\n  }, [url]);\n\n  const handlePlayPause = () => {\n    setPlay(!playing);\n    wavesurfer.current.playPause();\n  };\n\n  const onVolumeChange = (e) => {\n    const { target } = e;\n    const newVolume = +target.value;\n\n    if (newVolume) {\n      setVolume(newVolume);\n      wavesurfer.current.setVolume(newVolume || 1);\n    }\n  };\n\n  return (\n    <div>\n      <div id=\"waveform\" ref={waveformRef} />\n      <div className=\"controls\">\n        <Button\n          style={{\n            background: \"rgb(22, 22, 23)\",\n            color: \"rgba(255, 255, 255, 0.65)\",\n            borderColor: \"#001529\",\n          }}\n          onClick={handlePlayPause}\n        >\n          {!playing ? \"Play\" : \"Pause\"}\n        </Button>\n        <input\n          className=\"slider\"\n          type=\"range\"\n          id=\"volume\"\n          name=\"volume\"\n          // waveSurfer recognize value of `0` same as `1`\n          //  so we need to set some zero-ish value for silence\n          min=\"0.01\"\n          max=\"1\"\n          step=\".025\"\n          onChange={onVolumeChange}\n          defaultValue={volume}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Waveform;\n","/home/anguilar/cloudsound/frontend/src/components/UploadPhoto/index.js",["88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { fetch } from \"../../store/csrf\";\nimport { Col, Row, Modal, Button, Upload, message, Input } from \"antd\";\nimport { PlusOutlined, LoadingOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\nfunction UploadPhoto({ data }) {\n  const [imageLoading, setImageLoading] = useState(false);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [file, setFile] = useState(\"\");\n  const sessionUser = useSelector((state) => state.session.user);\n  const { loading, imageUrl } = imageLoading;\n  const userId = sessionUser.id;\n\n  function getBase64(img, callback) {\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => callback(reader.result));\n    reader.readAsDataURL(img);\n  }\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  //   function handleChange(info) {\n  //     if (info.file.status === \"uploading\") {\n  //       setImageLoading({ loading: true });\n  //       return;\n  //     }\n  //     if (info.file.status === \"done\") {\n  //       setFile(info.file);\n  //       getBase64(info.file.originFileObj, (imageUrl) =>\n  //         setImageLoading({\n  //           imageUrl,\n  //           loading: false,\n  //         })\n  //       );\n  //     }\n  //   }\n  function handleUpload(e) {\n    setFile(e.target.files[0]);\n    setImageLoading({\n      imageUrl,\n      loading: false,\n    });\n  }\n\n  function handleSubmit(e) {\n    const formData = new FormData();\n    console.log(formData);\n    formData.append(\"file\", file);\n    profilePicturePost(`/api/profile/${userId}`, formData);\n    setIsModalVisible(false);\n  }\n\n  // console.log(imageUrl);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n  const handleOk = () => {\n    profilePicturePost(`/api/profile/${userId}`, file);\n  };\n\n  function dummyRequest({ imageUrl, onSuccess }) {\n    setTimeout(() => {\n      onSuccess(\"OK\");\n    }, 0);\n  }\n\n  async function profilePicturePost(url, insertFile) {\n    console.log(insertFile);\n\n    const res = await fetch(url, {\n      method: \"POST\",\n      body: insertFile,\n    });\n    if (res.ok) {\n      return await res.data;\n    }\n  }\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  useEffect(() => {\n    // profileFetch();\n  }, []);\n\n  return (\n    <>\n      <Button type=\"text\" onClick={showModal}>\n        {data[0]}\n      </Button>\n      <Modal\n        title=\"Upload a Photo\"\n        visible={isModalVisible}\n        onOk={handleSubmit}\n        onCancel={handleCancel}\n      >\n        <Row>\n          <Col span={6}>\n            {/* <Upload\n              name=\"avatar\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              onChange={handleUpload}\n              customRequest={dummyRequest}\n              type=\"file\"\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt=\"avatar\" style={{ width: \"50%\" }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload> */}\n            <input type=\"file\" onChange={handleUpload}></input>\n            {imageUrl ? (\n              <img src={imageUrl} alt=\"avatar\" style={{ width: \"50%\" }} />\n            ) : (\n              uploadButton\n            )}\n          </Col>\n          <Col span={16} style={{ padding: \"5px\" }}>\n            <p>Select a new {data[0]}.</p>\n            <p>\n              Please select a photo that is <br></br>\n              less than 2mb and a jpeg/png.\n            </p>\n          </Col>\n        </Row>\n      </Modal>\n    </>\n  );\n}\n\nexport default UploadPhoto;\n","/home/anguilar/cloudsound/frontend/src/components/VideoHeader/index.js",[],{"ruleId":"94","severity":1,"message":"95","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":24},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"94","severity":1,"message":"102","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":18},{"ruleId":"94","severity":1,"message":"103","line":2,"column":20,"nodeType":"96","messageId":"97","endLine":2,"endColumn":28},{"ruleId":"94","severity":1,"message":"104","line":53,"column":7,"nodeType":"96","messageId":"97","endLine":53,"endColumn":15},{"ruleId":"105","severity":1,"message":"106","line":65,"column":6,"nodeType":"107","endLine":65,"endColumn":8,"suggestions":"108"},{"ruleId":"94","severity":1,"message":"109","line":12,"column":11,"nodeType":"96","messageId":"97","endLine":12,"endColumn":17},{"ruleId":"94","severity":1,"message":"110","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":15},{"ruleId":"94","severity":1,"message":"111","line":14,"column":18,"nodeType":"96","messageId":"97","endLine":14,"endColumn":24},{"ruleId":"94","severity":1,"message":"112","line":2,"column":18,"nodeType":"96","messageId":"97","endLine":2,"endColumn":24},{"ruleId":"105","severity":1,"message":"113","line":58,"column":6,"nodeType":"107","endLine":58,"endColumn":11,"suggestions":"114"},{"ruleId":"94","severity":1,"message":"115","line":4,"column":35,"nodeType":"96","messageId":"97","endLine":4,"endColumn":41},{"ruleId":"94","severity":1,"message":"116","line":4,"column":43,"nodeType":"96","messageId":"97","endLine":4,"endColumn":50},{"ruleId":"94","severity":1,"message":"117","line":4,"column":52,"nodeType":"96","messageId":"97","endLine":4,"endColumn":57},{"ruleId":"94","severity":1,"message":"118","line":16,"column":12,"nodeType":"96","messageId":"97","endLine":16,"endColumn":21},{"ruleId":"94","severity":1,"message":"119","line":65,"column":9,"nodeType":"96","messageId":"97","endLine":65,"endColumn":17},{"ruleId":"94","severity":1,"message":"120","line":69,"column":12,"nodeType":"96","messageId":"97","endLine":69,"endColumn":24},"no-unused-vars","'PageTransition' is defined but never used.","Identifier","unusedVar","no-native-reassign",["121"],"no-negated-in-lhs",["122"],"'dispatch' is defined but never used.","'getState' is defined but never used.","'newState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'profileFetch'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'userId' is assigned a value but never used.","'fetch' is defined but never used.","'Footer' is assigned a value but never used.","'Slider' is defined but never used.","React Hook useEffect has a missing dependency: 'volume'. Either include it or remove the dependency array. You can also do a functional update 'setVolume(v => ...)' if you only need 'volume' in the 'setVolume' call.",["124"],"'Upload' is defined but never used.","'message' is defined but never used.","'Input' is defined but never used.","'getBase64' is defined but never used.","'handleOk' is assigned a value but never used.","'dummyRequest' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [profileFetch]",{"range":"129","text":"130"},"Update the dependencies array to be: [url, volume]",{"range":"131","text":"132"},[1640,1642],"[profileFetch]",[1558,1563],"[url, volume]"]